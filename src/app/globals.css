@tailwind base;
@tailwind components;
@tailwind utilities;

html {
    font-size: 16px;
    /* font-family: var(--font-dm-sans); */
    @screen xl {
        font-size: 20px;
    }
}

.cat-latte .\!bg-black {
    color: rgb(var(--ctp-crust));
    --ctp-text: var(--ctp-crust);
}

/* ::-webkit-scrollbar {
  width: 1em;
}
::-webkit-scrollbar-thumb {
  background-color: rgb(var(--ctp-surface2));
  border-radius: 0.5em;
  border: calc(1em / 3) solid transparent;
  background-clip: padding-box;
  min-height: 1em;
}
::-webkit-scrollbar-thumb:hover {
  border: calc(1em / 4) solid transparent;
} */

* {
    box-sizing: border-box;
    scrollbar-width: 16px;
}

.h1::before {
    content: '# ' !important; /* Tailwind should start complying. */
}
.h2::before {
    content: '## ' !important; /* Tailwind should start complying. */
}

.bright-bg {
    color: rgb(var(--ctp-crust));
    --ctp-text: var(--ctp-crust);
}

html, body {
    height: 100%;
    width: 100%;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

input::placeholder {
    @apply opacity-ghost;
    color: inherit;
}

iframe {
    border: 0px;
}

option {
    background: inherit;
}

/* html {
    overflow-y: overlay;
} */

body {
    overflow: auto;
    scrollbar-gutter: stable both-edges;
}

/* 
*:focus {
    animation: none;
} */
*:focus-visible {
    outline: none;
    animation: 0.5s infinite alternate blinklight ease;
}
@keyframes blinklight {
    0% {
        filter: brightness(2);
    }
    100% {
        filter: brightness(1);
    }
}

.cat-latte *:focus-visible {
    animation: 0.5s infinite alternate blink ease;
}
@keyframes blink {
    0% {
        filter: brightness(0.5);
    }
    100% {
        filter: brightness(1);
    }
}
/*
@-moz-document url-prefix() {
    .gutter-both-edges {
        margin-right: unset;
    }
}

@supports (-webkit-hyphens: none) and (not ((-webkit-marquee-repetition:infinite) and (object-fit:fill))) {
    .gutter-both-edges {
        margin-right: unset;
    }
} */
